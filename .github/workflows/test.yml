# This workflow will install Python dependencies and run tests on
# windows and linux systems with a variety of Python versions

# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule: # only upstream, won't trigger on forks!
    - cron: '0 0 * * *' # daily

jobs:
  linux-tests:
    name: Build py${{ matrix.python-version }} @ ${{ matrix.os }} 🐍
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
        os: ["ubuntu-latest"]
        ymlfile: ["environment.yml"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ matrix.ymlfile }}
          mamba-version: "*"
          activate-environment: qa4sm_reader # todo: must match with name in environment.yml
          auto-activate-base: false
      - name: Print environment infos
        shell: bash -l {0}
        run: |
          conda info -a
          conda list
          pip list
          which pip
          which python
      - name: Export Environment
        shell: bash -l {0}
        run: |
          mkdir -p artifacts
          filename=env_py${{ matrix.python-version }}_${{ matrix.os }}.yml
          conda env export --no-builds | grep -v "prefix" > artifacts/$filename
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts-py${{ matrix.python-version }}-${{ matrix.os }}
          path: artifacts/*
      - name: Install package and test
        shell: bash -l {0}
        run: |
          pip install -e .
          pytest
      - name: Upload Coverage
        shell: bash -l {0}
        run: |
          pip install coveralls && coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  windows-tests:
    name: Build py${{ matrix.python-version }} @ ${{ matrix.os }} 🐍
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.10']
        ymlfile: ['environment.yml']
        os: ["windows-latest"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Debug step to echo commands and paths
      - name: Debug Conda Commands
        shell: cmd
        run: |
          echo Running Conda Command
          echo C:\Users\runneradmin\miniconda3\condabin\conda.bat
          echo %PATH%

      # Use specific version of Miniconda instead of "latest"
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: 'Miniconda3-py310_24.7.1-0-Windows-x86_64.exe'  # Use specific Miniconda version
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ matrix.ymlfile }}
          mamba-version: "*"
          activate-environment: base  # Start with base environment
          auto-activate-base: true  # Ensure the base environment is activated
          remove-profiles: true
          conda-solver: libmamba
          clean-patched-environment-file: true
          run-post: true

      # Verify conda is correctly installed
      - name: Verify Conda Installation
        shell: cmd
        run: |
          conda --version
          conda init cmd.exe

      # Manually install mamba to ensure it's available
      - name: Install Mamba Manually
        shell: cmd
        run: |
          conda install -n base -c conda-forge mamba
          mamba --version

      # Activate the desired environment (qa4sm_reader)
      - name: Activate Environment
        shell: cmd
        run: |
          conda activate qa4sm_reader
          conda list

      # Print environment information
      - name: Print Environment Infos
        shell: cmd
        run: |
          conda info -a
          conda list
          pip list
          where pip
          where python

      # Export the environment
      - name: Export Environment
        shell: cmd
        run: |
          mkdir artifacts
          filename=env_py${{ matrix.python-version }}_${{ matrix.os }}.yml
          conda env export --no-builds | findstr /v "prefix" > artifacts/%filename%

      # Upload the environment artifact
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts-py${{ matrix.python-version }}-${{ matrix.os }}
          path: artifacts/*

      # Install package and run tests
      - name: Install package and test
        shell: cmd
        run: |
          pip install -e .
          pytest

      # Upload coverage
      - name: Upload Coverage
        shell: cmd
        run: |
          pip install coveralls && coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Submit Coveralls 👚
    needs: [linux-tests, windows-tests]
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls && coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
